kotlin version: 2.0.0
error message: java.lang.OutOfMemoryError: Java heap space
	at org.jetbrains.kotlin.incremental.storage.ProtoMapValueExternalizer.read(externalizers.kt:138)
	at org.jetbrains.kotlin.incremental.storage.ProtoMapValueExternalizer.read(externalizers.kt:120)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.doGet(PersistentMapImpl.java:608)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentMapImpl.get(PersistentMapImpl.java:545)
	at org.jetbrains.kotlin.com.intellij.util.io.PersistentHashMap.get(PersistentHashMap.java:178)
	at org.jetbrains.kotlin.incremental.storage.LazyStorage.get(LazyStorage.kt:74)
	at org.jetbrains.kotlin.incremental.storage.InMemoryStorage.get(InMemoryStorage.kt:68)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCache$ProtoMap.get(IncrementalJvmCache.kt:406)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCache.getModuleMappingData(IncrementalJvmCache.kt:349)
	at org.jetbrains.kotlin.load.kotlin.incremental.IncrementalPackagePartProvider.moduleMappings_delegate$lambda$3(IncrementalPackagePartProvider.kt:43)
	at org.jetbrains.kotlin.load.kotlin.incremental.IncrementalPackagePartProvider$$Lambda/0x000000010056d7f8.invoke(Unknown Source)
	at kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	at org.jetbrains.kotlin.load.kotlin.incremental.IncrementalPackagePartProvider.getModuleMappings(IncrementalPackagePartProvider.kt:41)
	at org.jetbrains.kotlin.load.kotlin.incremental.IncrementalPackagePartProvider.allPackageNames_delegate$lambda$8(IncrementalPackagePartProvider.kt:57)
	at org.jetbrains.kotlin.load.kotlin.incremental.IncrementalPackagePartProvider$$Lambda/0x000000010056da38.invoke(Unknown Source)
	at kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	at org.jetbrains.kotlin.load.kotlin.incremental.IncrementalPackagePartProvider.getAllPackageNames(IncrementalPackagePartProvider.kt:55)
	at org.jetbrains.kotlin.load.kotlin.incremental.IncrementalPackagePartProvider.computePackageSetWithNonClassDeclarations(IncrementalPackagePartProvider.kt:62)
	at org.jetbrains.kotlin.fir.java.deserialization.JvmClassFileBasedSymbolProvider.computePackageSetWithNonClassDeclarations(JvmClassFileBasedSymbolProvider.kt:124)
	at org.jetbrains.kotlin.fir.deserialization.AbstractFirDeserializedSymbolProvider.packageNamesForNonClassDeclarations_delegate$lambda$0(AbstractFirDeserializedSymbolProvider.kt:107)
	at org.jetbrains.kotlin.fir.deserialization.AbstractFirDeserializedSymbolProvider$$Lambda/0x000000010050cf18.invoke(Unknown Source)
	at kotlin.SafePublicationLazyImpl.getValue(LazyJVM.kt:107)
	at org.jetbrains.kotlin.fir.deserialization.AbstractFirDeserializedSymbolProvider.getPackageNamesForNonClassDeclarations(AbstractFirDeserializedSymbolProvider.kt:106)
	at org.jetbrains.kotlin.fir.deserialization.AbstractFirDeserializedSymbolProvider.access$getPackageNamesForNonClassDeclarations(AbstractFirDeserializedSymbolProvider.kt:93)
	at org.jetbrains.kotlin.fir.deserialization.AbstractFirDeserializedSymbolProvider$symbolNamesProvider$1.computeTopLevelClassifierNames(AbstractFirDeserializedSymbolProvider.kt:120)
	at org.jetbrains.kotlin.fir.resolve.providers.FirCachedSymbolNamesProvider$special$$inlined$createCache$1.invoke(FirCachesFactory.kt:71)
	at org.jetbrains.kotlin.fir.resolve.providers.FirCachedSymbolNamesProvider$special$$inlined$createCache$1.invoke(FirCachesFactory.kt:69)
	at org.jetbrains.kotlin.fir.caches.FirThreadUnsafeCache.getValue(FirThreadUnsafeCachesFactory.kt:40)
	at org.jetbrains.kotlin.fir.resolve.providers.FirCachedSymbolNamesProvider.getTopLevelClassifierNamesInPackageSkippingPackageCheck(FirCachedSymbolNamesProvider.kt:186)
	at org.jetbrains.kotlin.fir.resolve.providers.FirCachedSymbolNamesProvider.getTopLevelClassifierNamesInPackage(FirCachedSymbolNamesProvider.kt:86)
	at org.jetbrains.kotlin.fir.resolve.providers.FirCompositeCachedSymbolNamesProvider.computeTopLevelClassifierNames(FirCachedSymbolNamesProvider.kt:144)
	at org.jetbrains.kotlin.fir.resolve.providers.impl.FirCachingCompositeSymbolProvider$symbolNamesProvider$1.computeTopLevelClassifierNames(FirCachingCompositeSymbolProvider.kt:47)


